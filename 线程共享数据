#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>

int pause_flag;

void *pthread_fun1(void *arg)
{
	while(1)
	{
		printf("pthread1: pause_flag = %d\n", ++pause_flag);
		sleep(2);
	}
	pthread_exit(NULL);
}

void *pthread_fun2(void *arg)
{
	while(1)
	{
		printf("pthread2: pause_flag = %d\n", ++pause_flag);
		sleep(2);
	}
	pthread_exit(NULL);
}

int
main(int argc, const char *argv[])
{
	pthread_t pid1 = 0;
	pthread_t pid2 = 0;
	int ret = 0;

	ret = pthread_create(&pid1, NULL, pthread_fun1, NULL);
	if(ret != 0)
	{
		perror("pthread_creatr1:");
		exit(-1);
	}
	ret = pthread_create(&pid2, NULL, pthread_fun2, NULL);
	if(ret != 0)
	{
		perror("pthread_creatr2:");
		exit(-1);
	}
	while(1)
	{
		pause_flag = pause_flag + 2;
		printf("main: %d\n", pause_flag);
		sleep(2);
	}

	pthread_join(pid1, NULL);
	pthread_join(pid2, NULL);
	pthread_detach(pid1);
	pthread_detach(pid2);

	return 0;
}
